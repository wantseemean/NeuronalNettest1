'''
Created on May 11, 2014

@author: sun
'''

import numpy
import random
import math
import matplotlib.pyplot as plt

p=0.4;N=6
NetMatrix=numpy.zeros((N,N))
Times=50000
x=numpy.zeros((Times,N))
y=numpy.zeros((Times,N))
z=numpy.zeros((Times,N))
xi=numpy.zeros((Times,N))


def SmallWorld():
#    for i in range(N):
#        NetMatrix[i,i]=1
    for j in range(N):
        if j<N-1:
            NetMatrix[j,j+1]=1
            NetMatrix[j+1,j]=1
        else :
            NetMatrix[0,j]=1
            NetMatrix[j,0]=1
    for n in range(N-2):
        if n==0:
            for m in range(n+2,N-1):
                Ranp=random.random()
            #print Ranp
                if Ranp<=p:
                    NetMatrix[n,m]=1#aij j>i
                Ranp=random.random()
                if Ranp<=p:
                    NetMatrix[m,n]=1#aij j>i
        else:
            for m in range(n+2,N):
                Ranp=random.random()
                #print Ranp
                if Ranp<=p:
                    NetMatrix[n,m]=1
                Ranp=random.random()
                if Ranp<=p:
                    NetMatrix[m,n]=1


def HRmod(dna,x,y,z,nn,Is,dt):
    a=dna[0];b=dna[1];c=dna[2];d=dna[3];s=dna[4];r=dna[5];xhi=dna[6];
    xn=x+(y-a*x**3+b*x**2-z+nn+Is)*dt
    yn=y+(c-d*x**2-y)*dt
    zn=z+r*(s*(x-xhi)-z)*dt
    return xn,yn,zn

def noise():
    return 0
    
def inpSig(ts,i,b):
    pot =0
    if ts==0:
        return 0
    else:
        for j in range(N):
            aij=NetMatrix[i,j]
            #aij=1
            #print i,j
            #print aij
            if b<20000:
                b=-1
            else:
                b=1
                    
            xji=(x[ts,j]-x[ts,i])*b
            pot=pot+aij*xji
            #print ts,i,j,aij,xji,pot      
            #print pot
    return pot

########### MAIN ###################


if __name__ == '__main__':
    SmallWorld()
    dna=(1,3,1,5,4,0.006,-1.6)
    #print NetMatrix
    I=3;dt=0.01
    x[0]=0.3;y[0]=0.3;z[0]=3;g=1
    for ts in range(Times-1):
        for i in range(N):                
            nn=noise()
            Is=g*inpSig(ts,i,1)
            if ts==0 and i==0:
                Is=-3
            #print ts,i,Is
            #print Is
            
            x[ts+1,i],y[ts+1,i],z[ts+1,i]=HRmod(dna,x[ts,i],y[ts,i],z[ts,i],nn,Is,dt)      
            #print(x[ts+1,i],ts,i)#print m
    
    ##### PLOTTING ####
    for i in range(N):
        plt.subplot(N,1,i)       
        plt.plot(x[:,i])
    plt.show()
